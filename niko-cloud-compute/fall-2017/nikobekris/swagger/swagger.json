{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample Tasklist API interface",
    "version": "1.0.0",
    "title": "Task List",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "nbekris@outlook.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "petstore.swagger.io",
  "basePath": "/v2",
  "tags": [
    {
      "name": "task",
      "description": "individual task",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "user",
      "description": "Operations about user",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user object",
        "description": "returns user object",
        "operationId": "getUserObject",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful get",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "creates new user",
        "operationId": "createUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "newUser",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created User Successfully",
            "schema": {
              "type": "integer"
            }
          },
          "405": {
            "description": "invalid input"
          }
        }
      }
    },
    "/user/{username}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by user name",
        "description": "",
        "operationId": "getUserByName",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "name of user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "username found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "username not found"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update user",
        "description": "",
        "operationId": "updateUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "name that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user updated successfully"
          },
          "400": {
            "description": "user not found"
          },
          "405": {
            "description": "invalid user"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user",
        "description": "",
        "operationId": "deleteUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "user deleted"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/user/{username}/tasks": {
      "get": {
        "tags": [
          "task"
        ],
        "summary": "Get user by user name",
        "description": "",
        "operationId": "getUserTasksById",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "found task",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "404": {
            "description": "task not found"
          }
        }
      },
      "post": {
        "tags": [
          "task"
        ],
        "summary": "create tasks",
        "description": "",
        "produces": [
          "application/json"
        ],
        "responses": {
          "default": {
            "description": "successful post"
          }
        }
      }
    },
    "/users/{username}/tasks/{taskId}": {
      "get": {
        "tags": [
          "task"
        ],
        "summary": "Get task by id from user by name",
        "description": "",
        "operationId": "getTaskByIDUserByName",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer"
          },
          {
            "name": "taskId",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "404": {
            "description": "invalid user"
          }
        }
      },
      "put": {
        "tags": [
          "task"
        ],
        "summary": "update task",
        "description": "update user task",
        "operationId": "updateTask",
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "description": "User Name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "task",
            "description": "updated task object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "task updated"
          },
          "404": {
            "description": "invalid input"
          },
          "405": {
            "description": "task not found"
          }
        }
      },
      "delete": {
        "tags": [
          "task"
        ],
        "summary": "delete task",
        "description": "This can only be done by logged in user",
        "operationId": "deleteTask",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Task Deleted"
          },
          "404": {
            "description": "Task not found"
          }
        }
      },
      "post": {
        "tags": [
          "task"
        ],
        "summary": "Create task by id ffrom username",
        "description": "",
        "produces": [
          "application/json"
        ],
        "responses": {
          "default": {
            "description": "successful post"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "required": [
        "userId",
        "userName"
      ],
      "properties": {
        "userId": {
          "type": "integer",
          "format": "int64",
          "example": 1234567890
        },
        "userName": {
          "type": "string",
          "example": "AgentBond007"
        },
        "firstName": {
          "type": "string",
          "example": "Jason"
        },
        "lastName": {
          "type": "string",
          "example": "Borne"
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Task"
          }
        }
      }
    },
    "Task": {
      "required": [
        "taskId",
        "taskName"
      ],
      "properties": {
        "taskId": {
          "type": "integer",
          "format": "int64",
          "example": 1234567890
        },
        "taskName": {
          "type": "string",
          "example": "Lets get food"
        },
        "complete": {
          "type": "boolean",
          "default": false
        }
      }
    }
  }
}